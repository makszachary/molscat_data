      SUBROUTINE BAS9IN(PRTP,IBOUND,IPRINT)
      USE efvs, ONLY: EFV, EFVNAM, EFVUNT, MAPEFV, NEFV
      USE potential, ONLY: IREF, NCONST, NEXTRA, NVLBLK, VCONST
      USE basis_data, ONLY: ELEVEL, JHALF, JLEVEL, NLEVEL
      USE physical_constants, ONLY: Giga_in_SI, bohr_magneton, g_e,
     c                              hartree_in_inv_cm,
     c                              inverse_fine_structure_constant,
     c                              speed_of_light_in_cm
C
C  BASE9 ROUTINE BY JMH, DECEMBER 2006
C  modified by mdf, january 2023
C  TWO MULTIPLET S ATOMS WITH NUCLEAR SPIN
C  total angular momentum BASIS SET FA FB F T
C  WORKS FOR EQUIVALENT OR NONEQUIVALENT ATOMS
C  AND FOR BOTH BOSONS AND FERMIONS
c  magnetic field terms present in code but ignored
C
C  DEC 06 VERSION DEVELOPED FOR PAIRS OF DOUBLET S ATOMS
C  JAN 10 VERSION USING JTOT INSTEAD OF IBLOCK FOR MTOT LOOP
C  DEC 11 VERSION USING COUPLED BASIS - ONLY FOR NON-EQUIVALENT ATOMS
C  AUG 12 MODIFIED TO HANDLE EQUIVALENT ATOMS
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      SAVE
      CHARACTER(8) PRTP(4),QNAME(10)
      LOGICAL LEVIN,EIN,LCOUNT,IDENTN
      DIMENSION LREQ(10),IFREQ(10),MFREQ(10),IFAREQ(10),IFBREQ(10)
      DIMENSION JSTATE(*),VL(*),IV(*),JSINDX(*),L(*),CENT(*),LAM(*)
      DIMENSION DGVL(*)
      DIMENSION MONQN(NQN1)

      COMMON/EXPVAL/IPERTN,IPOWN,DELTAN

C  ALTERED TO USE ARRAY SIZES FROM MODULE sizes ON 23-06-17 BY CRLS

      NAMELIST /BASIS9/ ISA,ISB,GSA,GSB,INUCA,INUCB,
     1                  HFSPLA,HFSPLB,GA,GB,LMIN,LMAX,LSTEP,
     2                  ISPSP,NEXTRA,
     2                  NREQ,LREQ,IFREQ,MFREQ,IFAREQ,IFBREQ
      INTEGER NSTATES,M,MP,JJ
      DOUBLE PRECISION E1,E2,EPA,EPB,EMA,EMB,E,BFIELD,EREF,ZEECPL,GAUNT
      DIMENSION EPA(30),EMA(30),EPB(30),EMB(30)
      DIMENSION E(900)
C
C  VALUES AMENDED ON 30-6-11 TO CURRENT NIST DATA
C     PARAMETER (GS=2.00231930436153D0)
C     PARAMETER (BOHRMG=1.51982984600456D-16*13.99624555D5)
C     PARAMETER (ALPINV=1.D0/7.2973525698D-3)
C  ELECTRON G-FACTOR: NOTE +VE SIGN SO H_Z CONTAINS +GS BFIELD M_S
C     DATA GS/2.0023193043718D0/
C  BOHR MAGNETON IN AU/GAUSS
C     DATA BOHRMG/2.127190603D-10/
C  CONVERSION FACTOR FROM CM-1 TO GHZ
C     DATA GHZCM/29.9792458D0/
C  CONVERSION FACTOR FROM HARTREE TO CM-1
C     DATA AUCM/219474.631371D0/
C     BM=BOHRMG*AUCM
C  FINE-STRUCTURE CONSTANT
C     DATA ALPINV/137.03599911D0/
C
C  20-09-2016: UPDATED TO USE MODULE (physical_constants) THAT CONTAINS
C              CONSISTENT AND UP-TO-DATE VALUES
      GS=-g_e
      ALPINV=inverse_fine_structure_constant
      GHZCM=speed_of_light_in_cm/Giga_in_SI
      AUCM=hartree_in_inv_cm
      BM=bohr_magneton
C
C  BAS9IN IS CALLED ONCE FOR EACH SCATTERING SYSTEM (USUALLY ONCE
C  PER RUN) AND CAN READ IN ANY BASIS SET INFORMATION NOT CONTAINED
C  IN NAMELIST BLOCK &BASIS. IT MUST ALSO HANDLE THE FOLLOWING
C  VARIABLES AND ARRAYS:
C
C  PRTP   SHOULD BE RETURNED AS A CHARACTER STRING DESCRIBING THE
C         INTERACTION TYPE
C  IDENT  CAN BE SET>0 IF AN INTERACTION OF IDENTICAL PARTICLES IS
C         BEING CONSIDERED AND SYMMETRISATION IS REQUIRED.
C         HOWEVER, THIS WOULD REQUIRE EXTRA CODING IN IDPART.
C  IBOUND CAN BE SET>0 IF THE CENTRIFUGAL POTENTIAL IS NOT OF THE
C         FORM L(L+1)/R**2; IF IBOUND>0, THE CENT ARRAY MUST BE
C         RETURNED FROM ENTRY CPL9

      PRTP(1)='ATOM - A'
      PRTP(2)='TOM IN T'
      PRTP(3)='OT T   B'
      PRTP(4)='ASIS SET'
C
      NCONST=2
C  SET UP ELEMENTS OF efvs MODULE
      NEFV=1
      EFVNAM(1)='MAGNETIC Z FIELD'
      EFVUNT(1)='GAUSS'
      MAPEFV=2

      VCONST(1)=1.D0/GHZCM
      IBOUND=0
      LMIN=0
      LMAX=0
      LSTEP=2
      ISPSP=0
      ISA=1
      GSA=-1.D0
      INUCA=-1
      GA=0.D0
      HFSPLA=0.D0
      ISB=1
      GSB=-1.D0
      INUCB=-1
      GB=0.D0
      HFSPLB=0.D0
      IDENTN=.FALSE.
      JHALF=0
      NREQ=0
      DO I=1,10
        LREQ(I)=-1
        MFREQ(I)=999
        IFREQ(I)=999
        IFAREQ(I)=999
        IFBREQ(I)=999
      ENDDO
C
C  NEXTRA IS THE NUMBER OF EXTRA OPERATORS INCLUDED IN THE CURRENT
C  CALCULATION
      NEXTRA=0
C  NONE ARE CODED IN THIS BASE9
C
      READ(5,BASIS9)
C
      IFMAX=INUCA+ISA
      IFMIN=ABS(INUCA-ISA)
      NSFAC=(IFMAX*(IFMAX+2)-IFMIN*(IFMIN+2))/4
      ANSA=0.D0
      IF (NSFAC.NE.0) ANSA=2.D0*HFSPLA/DBLE(NSFAC)
      IF (GSA.LT.0.D0) GSA=GS
      IF (GSB.LT.0.D0) GSB=GS
C
      IF (IDENTN .OR. INUCB.LT.0) THEN
        ISB=ISA
        GSB=GSA
        INUCB=INUCA
        GB=GA
        HFSPLB=HFSPLA
        IDENTN=.TRUE.
      ENDIF
C
      IFMAX=INUCB+ISB
      IFMIN=ABS(INUCB-ISB)
      NSFAC=(IFMAX*(IFMAX+2)-IFMIN*(IFMIN+2))/4
      ANSB=0.D0
      IF (NSFAC.NE.0) ANSB=2.D0*HFSPLB/DBLE(NSFAC)
C
      IF (IDENTN) THEN
        WRITE(6,601) 'S ',ISA,GSA,INUCA,GA,HFSPLA,ANSA
      ELSE
        WRITE(6,601) ' A',ISA,GSA,INUCA,GA,HFSPLA,ANSA
        WRITE(6,601) ' B',ISB,GSB,INUCB,GB,HFSPLB,ANSB
  601   FORMAT(/'  ATOM',A2,' WITH S =',I2,'/2,     MU_S   =',F12.6,
     1          ' MU_B',/,14X,'I =',I2,'/2,     MU_NUC =',F12.6,
     2          ' MU_B',/,14X,'HYPERFINE SPLITTING =',F12.6,
     3          ', COUPLING CONST =',F12.6,' GHZ',/)
      ENDIF
C
      WRITE(6,'(2X,A,I4)') 'L UP TO ',LMAX,'IN STEPS OF ',LSTEP
      WRITE(6,'(2X,A,I4)') 'LMIN SET BY PARITY'
      IF (LMIN.GT.0)
     1  WRITE(6,'(2X,A,I4)') 'BUT ANY L BELOW',LMIN,'EXCLUDED'
      IF (NREQ.GT.0) THEN
        WRITE(6,*) ' ONLY THE FOLLOWING L,FA,FB,F COMBINATIONS',
     &             ' ARE INCLUDED',
     1             ' (NOTE XFREQ >= 999 INCLUDES ALL XF)'
        DO IREQ=1,NREQ
          WRITE(6,'(''  BASIS SET INCLUDES ONLY (999 = ALL)''/
     &            2X,A,I3,A,I3,A,I3,A,I3,A)')
     &            ' L = ',LREQ(IREQ),', FA = ',IFAREQ(IREQ),'/2, FB = ',
     &             IFBREQ(IREQ),'/2, F = ',IFREQ(IREQ),'/2'
        ENDDO
      ENDIF

      write(6,*) ' This version of the base9 is in a total angular ',
     1           'momentum basis.'
      write(6,*) 'It does not implement magnetic fields. Much of the ',
     1           'internal machinery for them remains in the code and ',
     2           'the output may appear as if it is being used but it ',
     3           'does not get put into the Hamiltonian.'

      IF (ISPSP.GE.0) THEN
        WRITE(6,*) ' SPIN-SPIN TERM INCLUDED'
      ELSE
        WRITE(6,*) ' SPIN-SPIN TERM OMITTED'
      ENDIF
C
      RETURN
C ======================================================== END OF BAS9IN
C
      ENTRY SET9(LEVIN,EIN,NSTATE,JSTATE,NQN,QNAME,MXPAR,NLABV,IPRINT)
C
C  SET9 IS CALLED ONCE FOR EACH SCATTERING SYSTEM. IT SETS UP:
C  MXPAR, THE NUMBER OF DIFFERENT SYMMETRY BLOCKS
C  NLABV, THE NUMBER OF INDICES NEEDED TO DESCRIBE EACH TERM
C         IN THE POTENTIAL EXPANSION
C  NLEVEL AND JLEVEL, UNLESS LEVIN IS .TRUE.;
C  JSTATE AND NSTATE;
C  LEVEL, UNLESS EIN IS .TRUE.
C
C  IF THE LOGICAL VARIABLES ARE .TRUE. ON ENTRY, THE CORRESPONDING
C  QUANTITIES WERE INPUT EXPLICITLY IN NAMELIST BLOCK &BASIS.
C
C  IF EIN IS .FALSE., THE MOLECULAR CONSTANTS MUST HAVE BEEN SUPPLIED
C  IN THE &BASIS ARRAY ROTI: THE PROGRAMMER MAY USE THESE IN ANY WAY
C  THEY LIKE, BUT SHOULD OUTPUT THEM HERE FOR CHECKING.
C
C  NOTE THAT JLEVEL CONTAINS JUST THE QUANTUM NUMBERS NECESSARY TO
C  SPECIFY THE THRESHOLD ENERGY (AND ELEVEL CONTAINS THE CORRESPONDING
C  ENERGIES) WHEREAS JSTATE CONTAINS ALL THE CHANNEL QUANTUM NUMBERS EXCEPT
C  THE ORBITAL L, WHICH MAY BE A SUPERSET. THE LAST COLUMN OF THE JSTATE
C  ARRAY CONTAINS A POINTER TO THE ENERGY IN THE ELEVEL ARRAY.
C
      EIN=.FALSE.
      NLABV=1
C
C  JUN 2022: LOOPS OVER IFAB AND MFAB REVERSED SO THAT
C  FIRST CHANNEL FOR GROUND-STATE MTOT WILL USUALLY HAVE L=0
C
      NLEVEL=0
      DO IFA=ABS(ISA-INUCA),ISA+INUCA,2
        IFBMAX= ISB+INUCB
        IF (IDENTN) IFBMAX=IFA
      DO IFB=ABS(ISB-INUCB),IFBMAX,2
      DO IFAB=IFA+IFB,ABS(IFA-IFB),-2
        JLEVEL(4*NLEVEL+1)=IFA
        JLEVEL(4*NLEVEL+2)=IFB
        JLEVEL(4*NLEVEL+3)=IFAB
        JLEVEL(4*NLEVEL+4)=0
        NLEVEL=NLEVEL+1
        ELEVEL(NLEVEL)=0.D0
      ENDDO
      ENDDO
      ENDDO
C
      NQN=5
C  QNAME(1) TO (NQN-1) ARE NAMES OF QUANTUM NUMBERS
      QNAME(1)='   2*FA '
      QNAME(2)='   2*FB '
      QNAME(3)='  2*FAB '
      QNAME(4)='  BLANK '
C  LOOP OVER LEVELS AGAIN, THIS TIME SETTING UP JSTATE
      NSTATE=NLEVEL
      DO I=1,NLEVEL
        JSTATE(I)=JLEVEL(4*I-3)
        JSTATE(NSTATE+I)=JLEVEL(4*I-2)
        JSTATE(2*NSTATE+I)=JLEVEL(4*I-1)
        JSTATE(3*NSTATE+I)=JLEVEL(4*I)
        JSTATE(NSTATE*(NQN-1)+I)=I
      ENDDO
C
      MXPAR=2
      IF(LSTEP.EQ.1) MXPAR=1
      RETURN
C ======================================================== END OF SET9
C
      ENTRY BASE9(LCOUNT,N,JTOT,IBLOCK,JSTATE,NSTATE,NQN,JSINDX,L,
     1            IPRINT)
C
C  BASE9 IS CALLED EITHER TO COUNT THE ACTUAL NUMBER OF CHANNEL BASIS
C  FUNCTIONS OR ACTUALLY TO SET THEM UP (IN THE JSINDX AND L ARRAYS).
C
C  IT IS CALLED FOR EACH TOTAL J (JTOT) AND SYMMETRY BLOCK (IBLOCK).
C
C  IF LCOUNT IS .TRUE. ON ENTRY, JUST COUNT THE BASIS FUNCTIONS.
C  OTHERWISE, SET UP JSINDX (POINTER TO JSTATE) AND L (ORBITAL ANGULAR MOMENTUM)
C  FOR EACH CHANNEL.
C
C  THIS MUST TAKE INTO ACCOUNT JTOT AND IBLOCK.
C
C  NOTE THAT BOTH JTOT IS DOUBLED, LIKE ISA ETC
C
      IF((MOD(JTOT,2).EQ.0).NEQV.(MOD(ISA+INUCA+ISB+INUCB,2).EQ.0)) THEN
        WRITE(6,*) ' *** ERROR. JTOT MUST HAVE THE SAME PARITY AS',
     1             ' ISA + INUCA + ISB + INUCB. STOPPING'
        STOP
      ENDIF
C
      IF (LCOUNT) THEN
        WRITE(6,605) IBLOCK,(-1)**IBLOCK,JTOT
  605   FORMAT('  IBLOCK = ',I2,' SELECTS PARITY',I3,/'  T =',I3,
     1         '/2')
        IF (IDENTN) THEN
          IF (MOD(IFA,2).EQ.0) THEN
            IBOSFR=0
            WRITE(6,*) ' BASIS SET GENERATED FOR TWO IDENTICAL BOSONS'
          ELSE
            IBOSFR=1
            WRITE(6,*) ' BASIS SET GENERATED FOR TWO IDENTICAL FERMIONS'
          ENDIF
        ENDIF
      ENDIF
C

      N=0
      DO I=1,NSTATE
        IFA=JSTATE(I)
        IFB=JSTATE(NSTATE+I)
        IFAB=JSTATE(2*NSTATE+I)
C
C  LOOP FOR L, NOTING THAT LL=2*L
C  LSTEP=1 IS FOR SPECIAL CASES WHERE PARITY IS NOT CONSERVED
C          (OR IS IGNORED) SO MXPAR=1, IBLOCK=1 AND L STARTS AT LMIN
C
        LSTART=4-2*IBLOCK
        IF (LSTEP.EQ.1) LSTART=2*LMIN
        DO LL=LSTART,2*LMAX,2*LSTEP
          IF (LL.LT.2*LMIN) CYCLE
          if (LL.gt.ifab+jtot.or.ll.lt.abs(ifab-jtot)) cycle
          ISUM=(IFA+IFB-IFAB)/2+LL/2+IBOSFR
          IF (IDENTN .AND. IFA.EQ.IFB .AND. MOD(ISUM,2).NE.0
     &               .AND. LSTEP.NE.1) CYCLE
C
C  IF AN EXPLICIT LIST OF L,FA,FB,FAB COMBINATIONS IS SUPPLIED, IS THIS IN IT?
C  NOTE THAT SETTING XFREQ >= 999 INCLUDES ALL XF VALUES FOR THAT L
C
          IF (NREQ.EQ.0) GOTO 300

          DO IREQ=1,NREQ
            IF (LREQ(IREQ).GE.0 .AND. LL/2.NE.LREQ(IREQ)) CYCLE
            IF (ABS(IFAREQ(IREQ)).LT.999 .AND. IFA.NE.IFAREQ(IREQ))
     &        CYCLE
            IF (ABS(IFBREQ(IREQ)).LT.999 .AND. IFB.NE.IFBREQ(IREQ))
     &        CYCLE
            IF (ABS(IFREQ(IREQ)).LT.999 .AND. IFAB.NE.IFREQ(IREQ))
     &        CYCLE
            GOTO 300
          ENDDO
C
C  THIS L,FA,FB,FAB COMBINATION NOT WANTED
C
          CYCLE
C
C  THIS L,FA,FB,FAB COMBINATION IS WANTED
C
  300     N=N+1
          IF (LCOUNT) CYCLE
          JSINDX(N)=I
          L(N)=LL/2
        ENDDO
      ENDDO
      RETURN
C ======================================================== END OF BASE9
C
      ENTRY CPL9(N,IBLOCK,NHAM,LAM,MXLAM,NSTATE,JSTATE,JSINDX,L,JTOT,
     1           VL,IV,CENT,DGVL,IBOUND,IEXCH,IPRINT)
C
C  CPL9 IS CALLED AFTER BASE9 FOR EACH JTOT AND IBLOCK, TO SET UP THE
C  POTENTIAL COUPLING COEFFICIENTS VL.
C  IF IBOUND>0, IT ALSO SETS UP THE CENTRIFUGAL COEFFICIENTS CENT.
C  INDICES SPECIFYING THE MXLAM DIFFERENT POTENTIAL SYMMETRIES ARE IN
C  THE FIRST XX*MXLAM ELEMENTS OF LAM; THE STRUCTURE OF THE LAM ARRAY
C  (AND THE VALUE OF XX) IS CHOSEN BY THE PROGRAMMER, AND MUST
C  CORRESPOND WITH THAT USED IN SUBROUTINE POTENL.
C  NHAM IS THE NUMBER OF DIFFERENT POTENTIAL TERMS WHICH CONTRIBUTE TO
C  EACH MATRIX ELEMENT (SEE SUBROUTINE SUMLAM). IT SOMETIMES SAVES
C  A SIGNIFICANT AMOUNT OF SPACE IF IT CAN BE LESS THAN MXLAM.
C
C  IN GENERAL THERE ARE NSPIN=1+MIN(ISA,ISB) DIFFERENT TOTAL SPINS

      SPMIN=0.5D0*ABS(DBLE(ISA-ISB))
      NSPIN=1+MIN(ISA,ISB)
      IF (IDENTN) XBOSFR=(-1.D0)**(IBOSFR+L(1))

C  THIS BASE9 ORDERS OPERATOR IN A FIXED SEQUENCE, WITHOUT REFERENCE TO
C  THE ARRAY LAM. THIS IS NOT RECOMMENDED FOR NEW BASE9 ROUTINES
C
C  FOR DOUBLET S + DOUBLET S
C  LL = 1: SINGLET POTENTIAL
C  LL = 2: TRIPLET POTENTIAL
C  FOR ANY MULTIPLET S + MULTIPLET S
C  LL = NSPIN+1: SPIN-SPIN TERM (INCLUDING 2ND-ORDER SPIN-ORBIT)
C  ANY LL REMAINING UP TO MXLAM RESERVED FOR FUTURE EXPANSION:
C     THIS VERSION USES SUCH TERMS WITH LAM(LL)=20, 10 or 00 
C     FOR THE ANISOTROPY OR SHIFT OF A CYLINDRICALLY SYMMETRIC TRAP
C     LL = -10 IS A SPECIAL CASE FOR ANOTHER ISOTROPIC TERM
C  LL = MXLAM+1: S.I HYPERFINE TERM
C  LL = MXLAM+2: MAGNETIC FIELD TERM
 
      DO LL=1,NVLBLK
        NNZ=0
        I=LL
        DO ICOL=1,N
C  PICK OUT COLUMN QUANTUM NUMBERS
          IFAC=JSTATE(JSINDX(ICOL))
          IFBC=JSTATE(JSINDX(ICOL)+NSTATE)
          IFABC=JSTATE(JSINDX(ICOL)+2*NSTATE)
          LC=L(ICOL)
        DO IROW=1,ICOL
C  PICK OUT ROW QUANTUM NUMBERS
          IFAR=JSTATE(JSINDX(IROW))
          IFBR=JSTATE(JSINDX(IROW)+NSTATE)
          IFABR=JSTATE(JSINDX(IROW)+2*NSTATE)
          LR=L(IROW)
          VL(I)=0.D0
          IF (LL.LE.NSPIN) THEN
            XS=SPMIN+DBLE(LL-1)
            IF (LR.EQ.LC .AND. IFABR.EQ.IFABC) THEN
C  POTENTIAL TERM FOR SPIN=SPMIN+LL-1
              IF (IDENTN) THEN
C  EXCHANGE SYMMETRY FOR IDENTICAL PARTICLES
                FAC1=0.D0
                IF (IFAR.EQ.IFBR) THEN
                  IF (IFAC.EQ.IFBC) THEN
C  NO EXCHANGE TERMS FOR EITHER ROW OR COLUMN: 1 TERM
                    VL(I)=CENTPC(XS,ISA,ISB,INUCA,INUCB,
     &                           IFAR,IFAC,IFBR,IFBC,IFABR)
                  ELSE
C  EXCHANGE SYMMETRY FOR COLUMN BUT NOT ROW: 2 TERMS
                    FAC1=CENTPC(XS,ISA,ISB,INUCA,INUCB,IFAR,IFAC,IFBR,
     &                          IFBC,IFABR)
                    FAC1=FAC1+XBOSFR*(-1.D0)**((IFAC+IFBC-IFABC)/2)*
     &                        CENTPC(XS,ISA,ISB,INUCA,INUCB,
     &                               IFAR,IFBC,IFBR,IFAC,IFABC)
                    VL(I)=FAC1/SQRT(2.D0)
                  ENDIF
                ELSE
                  IF (IFAC.EQ.IFBC) THEN
C  EXCHANGE SYMMETRY FOR ROW BUT NOT COLUMN: 2 TERMS
                    FAC1=CENTPC(XS,ISA,ISB,INUCA,INUCB,
     &                          IFAR,IFAC,IFBR,IFBC,IFABR)
                    FAC1=FAC1+XBOSFR*(-1.D0)**((IFAR+IFBR-IFABR)/2)*
     &                        CENTPC(XS,ISA,ISB,INUCA,INUCB,
     &                               IFBR,IFAC,IFAR,IFBC,IFABR)
                    VL(I)=FAC1/SQRT(2.D0)
                  ELSE
C  EXCHANGE SYMMETRY FOR ROW AND COLUMN: 4 TERMS
                    FAC1=CENTPC(XS,ISA,ISB,INUCA,INUCB,
     &                          IFAR,IFAC,IFBR,IFBC,IFABR)+
     &                   (-1.D0)**((IFAC+IFBC-IFABC)/2)*
     &                   (-1.D0)**((IFAR+IFBR-IFABR)/2)*
     &                   CENTPC(XS,ISA,ISB,INUCA,INUCB,
     &                          IFBR,IFBC,IFAR,IFAC,IFABR)
                    FAC1=FAC1+XBOSFR*((-1.D0)**((IFAR+IFBR-IFABR)/2)*
     &                        CENTPC(XS,ISA,ISB,INUCA,INUCB,
     &                               IFBR,IFAC,IFAR,IFBC,IFABR)+
     &                        (-1.D0)**((IFAC+IFBC-IFABC)/2)*
     &                        CENTPC(XS,ISA,ISB,INUCA,INUCB,
     &                               IFAR,IFBC,IFBR,IFAC,IFABR))
                    VL(I)=0.5D0*FAC1
                  ENDIF
                ENDIF
              ELSE
C  NON-IDENTICAL ATOMS
                VL(I)=CENTPC(XS,ISA,ISB,INUCA,INUCB,
     &                       IFAR,IFAC,IFBR,IFBC,IFABR)
              ENDIF
            ENDIF
          ELSEIF (LL.EQ.NSPIN+1 .AND. ISPSP.GE.0) THEN
C  SPIN-SPIN TERM
      if (abs(LR-LC).le.2) then
        MTOT=JTOT
c  begin clebsch-gordan sum
        fac2=0.d0
        do mlr=-2*LR,2*LR,2
          MFABR=MTOT-MLR
          if (abs(mfabr).gt.ifabr) cycle
          facR=thrj2(ifabr,2*lr,jtot,mfabr,mlr,-mtot)*sqrt(JTOT+1.0)*
     1         (-1)**((-IFABR+2*LR-MTOT)/2)
          if (facR.eq.0.D0) cycle
          do mlc=-2*Lc,2*Lc,2
            MFABc=MTOT-MLc
            if (abs(mfabc).gt.ifabc) cycle
            if (abs(mfabc-mfabr).gt.4) cycle
            facC=thrj2(ifabc,2*lc,jtot,mfabc,mlc,-mtot)*sqrt(JTOT+1.0)
     1           *(-1)**((-IFABc+2*Lc-MTOT)/2)
            if (facc.eq.0.D0) cycle
c  evaluate individual term
            FAC1=0.D0
            IF (IDENTN) THEN
C  IDENTICAL ATOMS
              IF (IFAR.EQ.IFBR) THEN
                IF (IFAC.EQ.IFBC) THEN
C  NO EXCHANGE TERMS FOR EITHER ROW OR COLUMN: 1 TERM
                  fac1=SPINSC(ISA,ISB,INUCA,INUCB,LR,LC,MTOT,
     &                         IFAR,IFBR,IFABR,MFABR,
     &                         IFAC,IFBC,IFABC,MFABC)
C
                ELSE
C  EXCHANGE SYMMETRY FOR COLUMN BUT NOT ROW: 2 TERMS
                  FAC1=SPINSC(ISA,ISB,INUCA,INUCB,LR,LC,MTOT,
     &                        IFAR,IFBR,IFABR,MFABR,
     &                        IFAC,IFBC,IFABC,MFABC)
                  FAC1=FAC1+XBOSFR*(-1.D0)**((IFAC+IFBC-IFABC)/2)*
     &                      SPINSC(ISA,ISB,INUCA,INUCB,LR,LC,MTOT,
     &                             IFAR,IFBR,IFABR,MFABR,
     &                             IFBC,IFAC,IFABC,MFABC)
                  fac1=FAC1/SQRT(2.D0)
                ENDIF
              ELSE
                IF (IFAC.EQ.IFBC) THEN
C  EXCHANGE SYMMETRY FOR ROW BUT NOT COLUMN: 2 TERMS
                  FAC1=SPINSC(ISA,ISB,INUCA,INUCB,LR,LC,MTOT,
     &                        IFAR,IFBR,IFABR,MFABR,
     &                        IFAC,IFBC,IFABC,MFABC)
                  FAC1=FAC1+XBOSFR*(-1.D0)**((IFAR+IFBR-IFABR)/2)*
     &                      SPINSC(ISA,ISB,INUCA,INUCB,LR,LC,MTOT,
     &                             IFBR,IFAR,IFABR,MFABR,
     &                             IFAC,IFBC,IFABC,MFABC)
                  fac1=FAC1/SQRT(2.D0)
                ELSE
C  EXCHANGE SYMMETRY FOR ROW AND COLUMN: 4 TERMS
                  FAC1=SPINSC(ISA,ISB,INUCA,INUCB,LR,LC,MTOT,
     &                        IFAR,IFBR,IFABR,MFABR,
     &                        IFAC,IFBC,IFABC,MFABC)+
     &                 (-1.D0)**((IFAC+IFBC-IFABC)/2)*
     &                 (-1.D0)**((IFAR+IFBR-IFABR)/2)*
     &                 SPINSC(ISA,ISB,INUCA,INUCB,LR,LC,MTOT,
     &                        IFBR,IFAR,IFABR,MFABR,
     &                        IFBC,IFAC,IFABC,MFABC)
                  FAC1=FAC1+XBOSFR*((-1.D0)**((IFAC+IFBC-IFABC)/2)*
     &                      SPINSC(ISA,ISB,INUCA,INUCB,LR,LC,MTOT,
     &                             IFAR,IFBR,IFABR,MFABR,
     &                             IFBC,IFAC,IFABC,MFABC)+
     &                      (-1.D0)**((IFAR+IFBR-IFABR)/2)*
     &                      SPINSC(ISA,ISB,INUCA,INUCB,LR,LC,MTOT,
     &                             IFBR,IFAR,IFABR,MFABR,
     &                             IFAC,IFBC,IFABC,MFABC))
                  fac1=0.5D0*FAC1
                ENDIF
              ENDIF
            ELSE
C  NON-IDENTICAL ATOMS
              IF (ABS(MFABR-MFABC).LE.4) THEN
                fac1=SPINSC(ISA,ISB,INUCA,INUCB,LR,LC,MTOT,
     &                       IFAR,IFBR,IFABR,MFABR,
     &                       IFAC,IFBC,IFABC,MFABC)
              ENDIF
            ENDIF
c  accumulate and loop
            fac2=fac2+fac1*facr*facc
          enddo
        enddo
      endif
            VL(I)=fac2*AUCM/ALPINV**2
C
C  ANISOTROPY OF TRAP, P_LAMBDA(COS THETA) WITH RESPECT TO Z (FIELD) AXIS
C  INDICATED BY LAM(LL)=10*LAMBDA
C  IGNORE ANY NONCYLINDICAL TERMS WITH LAM=10*LAMBDA+NU
C
          ELSEIF (LL.GT.NSPIN .AND. LL.LE.MXLAM
     1           .AND. MOD(LAM(LL),10).EQ.0) THEN
            LAMBDA=LAM(LL)/10
            IF(LAMBDA.EQ.-1) LAMBDA=0
            IF(IFAR.EQ.IFAC .AND. IFBR.EQ.IFBC .AND. IFABR.EQ.IFABC
     1        .AND. MFABR.EQ.MFABC .AND. ABS(LR-LC).LE.LAMBDA)
     2        VL(I)=GAUNT(LAMBDA,0,LR,MLR,LC,MLC)
          ELSEIF (LL.EQ.MXLAM+1 .AND. LR.EQ.LC) THEN
C  HYPERFINE
C  NON-IDENTICAL ATOMS AND IDENTICAL ATOMS - DIAGONAL SO NO
C  EXCHANGE SYMMETRY COMPLICATIONS
            IF (IROW.EQ.ICOL) THEN
              VL(I)=ANSA*DBLE(IFAR*(IFAR+2)-ISA*(ISA+2)-INUCA*(INUCA+2))
     &             +ANSB*DBLE(IFBR*(IFBR+2)-ISB*(ISB+2)-INUCB*(INUCB+2))
              VL(I)=VL(I)/8.D0
            ENDIF
C
          ELSEIF (LL.EQ.MXLAM+2 .AND. LR.EQ.LC .AND. MLR.EQ.MLC) THEN
C  MAGNETIC FIELD ALONG Z AXIS
ccc removed
c            IF (IDENTN) THEN
cC  IDENTICAL ATOMS
c              FAC1=0.D0
c              IF (IFAR.EQ.IFBR) THEN
c                IF (IFAC.EQ.IFBC) THEN
cC  NO EXCHANGE TERMS FOR EITHER ROW OR COLUMN: 1 TERM
c                  VL(I)=ZEECPL(ISA,ISB,INUCA,INUCB,
c     &                         IFAR,IFBR,IFABR,MFABR,
c     &                         IFAC,IFBC,IFABC,MFABC,
c     &                         GSA,GSB,GA,GB)
c                  VL(I)=VL(I)*BM*0.5D0
c
c                ELSE
cC  EXCHANGE SYMMETRY FOR COLUMN BUT NOT ROW: 2 TERMS
c                  FAC1=ZEECPL(ISA,ISB,INUCA,INUCB,
c     &                        IFAR,IFBR,IFABR,MFABR,
c     &                        IFAC,IFBC,IFABC,MFABC,
c     &                        GSA,GSB,GA,GB)
c                  FAC1=FAC1+XBOSFR*(-1.D0)**((IFAC+IFBC-IFABC)/2)*
c     &                      ZEECPL(ISA,ISB,INUCA,INUCB,
c     &                        IFAR,IFBR,IFABR,MFABR,
c     &                        IFBC,IFAC,IFABC,MFABC,
c     &                             GSA,GSB,GA,GB)
c                  VL(I)=(FAC1/SQRT(2.D0))*BM*0.5D0
c                ENDIF
c              ELSE
c                IF (IFAC.EQ.IFBC) THEN
cC  EXCHANGE SYMMETRY FOR ROW BUT NOT COLUMN: 2 TERMS
c                  FAC1=ZEECPL(ISA,ISB,INUCA,INUCB,
c     &                        IFAR,IFBR,IFABR,MFABR,
c     &                        IFAC,IFBC,IFABC,MFABC,
c     &                        GSA,GSB,GA,GB)
c                  FAC1=FAC1+XBOSFR*(-1.D0)**((IFAR+IFBR-IFABR)/2)*
c     &                      ZEECPL(ISA,ISB,INUCA,INUCB,
c     &                             IFBR,IFAR,IFABR,MFABR,
c     &                             IFAC,IFBC,IFABC,MFABC,
c     &                             GSA,GSB,GA,GB)
c                  VL(I)=(FAC1/SQRT(2.D0))*BM*0.5D0
c                ELSE
cC  EXCHANGE SYMMETRY FOR ROW AND COLUMN: 4 TERMS
c                  FAC1=ZEECPL(ISA,ISB,INUCA,INUCB,
c     &                        IFAR,IFBR,IFABR,MFABR,
c     &                        IFAC,IFBC,IFABC,MFABC,
c     &                        GSA,GSB,GA,GB)+
c     &                 (-1.D0)**((IFAC+IFBC-IFABC)/2)*
c     &                 (-1.D0)**((IFAR+IFBR-IFABR)/2)*
c     &                 ZEECPL(ISA,ISB,INUCA,INUCB,
c     &                        IFBR,IFAR,IFABR,MFABR,
c     &                        IFBC,IFAC,IFABC,MFABC,
c     &                        GSA,GSB,GA,GB)
c                  FAC1=FAC1+XBOSFR*((-1.D0)**((IFAC+IFBC-IFABC)/2)*
c     &                      ZEECPL(ISA,ISB,INUCA,INUCB,
c     &                        IFAR,IFBR,IFABR,MFABR,
c     &                        IFBC,IFAC,IFABC,MFABC,
c     &                             GSA,GSB,GA,GB)+
c     &                      (-1.D0)**((IFAR+IFBR-IFABR)*0.5D0)*
c     &                      ZEECPL(ISA,ISB,INUCA,INUCB,
c     &                             IFBR,IFAR,IFABR,MFABR,
c     &                             IFAC,IFBC,IFABC,MFABC,
c     &                             GSA,GSB,GA,GB))
c                  VL(I)=0.5D0*FAC1*BM*0.5D0
c                ENDIF
c              ENDIF
cC  NON-IDENTICAL ATOMS
c            ELSE
c              VL(I)=ZEECPL(ISA,ISB,INUCA,INUCB,
c     &                     IFAR,IFBR,IFABR,MFABR,
c     &                     IFAC,IFBC,IFABC,MFABC,
c     &                     GSA,GSB,GA,GB)
c              VL(I)=VL(I)*BM*0.5D0
c            ENDIF
          ENDIF
          IF (VL(I).NE.0.D0) NNZ=NNZ+1
          I=I+NVLBLK
        ENDDO
        ENDDO

        IF (NNZ.EQ.0) THEN
          WRITE(6,612) JTOT,LL
  612     FORMAT('  * * * NOTE.  FOR JTOT =',I4,',  ALL COUPLING',
     1           ' COEFFICIENTS ARE 0.0 FOR POTENTIAL SYMMETRY',I4)
        ENDIF
      ENDDO
      RETURN
C ========================================================= END OF CPL9
C
      ENTRY THRSH9(JREF,MONQN,NQN1,EREF,IPRINT)
C
C  THIS CALCULATES THRESHOLDS FOR TWO ATOMS, BOTH WITH ELECTRONIC SPIN 1/2
C  USING BREIT-RABI RELATIONSHIP FOR EACH ATOM SEPARATELY AND THEN ADDING
C  THE RESULTS.  THE MONOMER QUANUM NUMBERS ARE SPECIFIED IN THE ARRAY
C  MONQN, AND ARE:
C     MONQN(1): 2*F(A) THAT DESIRED STATE CORRELATES WITH AT LOW FIELD
C     MONQN(2): 2*MF(A)
C
      BFIELD=EFV(1)
      IF (IPERTN.EQ.5 .AND. IPOWN.EQ.0) BFIELD=BFIELD+DELTAN
      IF (JREF.GT.0) THEN
        WRITE(6,*) ' *** ERROR - THRSH9 CALLED WITH POSITIVE IREF'
        STOP
      ENDIF
C
      IF (MONQN(1).EQ.-99999) THEN
        WRITE(6,*) ' *** ERROR - THRSH9 CALLED WITH MONQN UNSET'
        STOP
      ENDIF
C
      BOHRM=BM*GHZCM
C
C  BREIT-RABI FOR ATOM A
C
      M=MONQN(2)
      IF (ABS(MONQN(1)-INUCA).NE.1) THEN
        WRITE(6,*) ' *** THRSH9: INVALID MONQN(1) =',MONQN(1)
        STOP
      ELSEIF (ABS(M).GT.MONQN(1)) THEN
        WRITE(6,*) ' *** THRSH9: MA =',M,' > FA. STOPPING'
        STOP
      ELSEIF (MOD(M+MONQN(1),2).NE.0) THEN
        WRITE(6,*) ' *** THRSH9: INVALID MONQN(1),MONQN(2) PAIR =',
     1             MONQN(1),M
        STOP
      ENDIF
      E1=-HFSPLA/(2.D0*DBLE(INUCA+1)) + 0.5D0*GA*BOHRM*DBLE(M)*BFIELD
      X=BOHRM*BFIELD*(GSA-GA)/HFSPLA
      E2=0.5D0*HFSPLA*SQRT(1.D0+DBLE(M+M)*X/DBLE(INUCA+1)+X*X)
C
      IF (ABS(M).EQ.INUCA+1) THEN
        EA=DBLE(INUCA)*HFSPLA/(2D0*DBLE(INUCA+1))+SIGN(1.D0,DBLE(M))
     1     *BOHRM*BFIELD*(GSA*ISA*0.5D0+GA*INUCA*0.5D0)
      ELSEIF (MONQN(1).EQ.INUCA+1) THEN
        EA=E1+E2
      ELSEIF (MONQN(1).EQ.INUCA-1) THEN
        EA=E1-E2
      ELSE
        WRITE(6,*) ' THRSH9: INVALID MONQN(1) =',MONQN(1)
        STOP
      ENDIF
C
C  BREIT-RABI FOR ATOM B
C
      M=MONQN(4)
      IF (ABS(MONQN(3)-INUCB).NE.1) THEN
        WRITE(6,*) ' *** THRSH9: INVALID MONQN(3) =',MONQN(3)
        STOP
      ELSEIF (ABS(M).GT.MONQN(3)) THEN
        WRITE(6,*) ' *** THRSH9: MB =',M,' > FB. STOPPING'
        STOP
      ELSEIF (MOD(M+MONQN(3),2).NE.0) THEN
        WRITE(6,*) ' *** THRSH9: INVALID MONQN(3),MONQN(4) PAIR =',
     1             MONQN(3),M
        STOP
      ENDIF
      E1=-HFSPLB/(2.D0*DBLE(INUCB+1)) + 0.5D0*GB*BOHRM*DBLE(M)*BFIELD
      X=BOHRM*BFIELD*(GSB-GB)/HFSPLB
      E2=0.5D0*HFSPLB*SQRT(1.D0+DBLE(M+M)*X/DBLE(INUCB+1)+X*X)
C
      IF (ABS(M).EQ.INUCB+1) THEN
        EB=DBLE(INUCB)*HFSPLB/(2D0*DBLE(INUCB+1))+SIGN(1.D0,DBLE(M))
     1     *BOHRM*BFIELD*(GSB*ISB*0.5D0+GB*INUCB*0.5D0)
      ELSEIF (MONQN(3).EQ.INUCB+1) THEN
        EB=E1+E2
      ELSEIF (MONQN(3).EQ.INUCB-1) THEN
        EB=E1-E2
      ELSE
        WRITE(6,*) ' THRSH9: INVALID MONQN(3) =',MONQN(3)
        STOP
      ENDIF
C
      IF (IPRINT.GE.8) THEN
        WRITE(6,*)
        WRITE(6,667) 'A',MONQN(1),MONQN(2),EA
        WRITE(6,667) 'B',MONQN(3),MONQN(4),EB
  667   FORMAT('  ATOM ',A1,' WITH DOUBLED QUANTUM NOS',2I3,
     1         ' IS AT ENERGY',F12.7,' GHZ')
      ENDIF

      EAB=EA+EB
      EREF=EAB/GHZCM
      IF (IPRINT.GE.6) WRITE(6,668) EAB,EREF
  668 FORMAT('  THRESHOLD USED IS AT ',F12.7,' GHZ =',F19.12,' CM-1')

      RETURN
      END
C ======================================================== END OF THRSH9
      SUBROUTINE POTIN9(ITYPE,LAM,MXLAM,NPTS,NDIM,XPT,XWT,
     1                  MXPT,IVMIN,IVMAX,L1MAX,L2MAX,
     2                  MXLMB,X,MX,IXFAC)
C
      IMPLICIT DOUBLE PRECISION (A-H,O-Z)
      DIMENSION LAM(1,MXLAM),NPTS(NDIM),XPT(MXPT,NDIM),XWT(MXPT,NDIM),
     1          X(MX)
      NAMELIST/POTL9/ ITYPE
C
C  ROUTINE TO INITIALIZE POTENTIAL FOR ITYPE=9.
C  NOTE THAT THE ITYPE VARIABLE PASSED TO POTIN9 IS LOCAL TO
C  POTENL, AND MAY BE CHANGED TO CONTROL POTENL
C  WITHOUT AFFECTING HOW THE REST OF MOLSCAT/BOUND BEHAVES.
C
C  THE MINIMUM THAT POTIN9 MUST DO IS TO SET ITYPE SO THAT
C  POTENL USES ITS NORMAL LOGIC FOR SOME OTHER VALUE OF ITYPE.
C  HOWEVER, IN SOME CASES IT WILL BE NECESSARY TO DO MUCH MORE,
C  FOR EXAMPLE TO SET UP SPECIAL SETS OF QUADRATURE POINTS AND
C  WEIGHTS.
      ITYPE=1
      RETURN
      END
C ======================================================== END OF POTIN9
      FUNCTION CENTPC(XS,ISA,ISB,INUCA,INUCB,IFAR,IFAC,IFBR,IFBC,IFAB)
C
C  FUNCTION FOR A MATRIX ELEMENT OF A CENTRAL POTENTIAL TERM
C  ALL INPUT INTEGERS ARE TWICE THE CORRESPONDING QUANTUM NUMBERS
C
C  THIS CODE EXECUTES THE ALGEBRAIC EXPRESSIONS DERIVED IN MY NOTES ON
C  EXPRESSING THE MATRIX ELEMENTS FOR THE ISOTROPIC POTENTIAL FOR AN ALKALI
C  DIMER SYSTEM USING A COUPLED BASIS.
C  CRLS 13-12-11
C
      IMPLICIT NONE
      DOUBLE PRECISION DENOM,A,B,XS,PREFAC,XFAC,SIXJB,CENTPC
      INTEGER IS,ISA,ISB,INUCA,INUCB,IFAR,IFAC,IFBR,IFBC,IFAB,IX
      LOGICAL ZTEST
C
      CENTPC=0.D0
      ZTEST=.TRUE.
      IF (ISA.EQ.1 .AND. ISB.EQ.1) THEN
C  THIS IS CODED FOR THE PARTICULAR CASE OF ISA=1=ISB
        DENOM=8.D0*(INUCA+1)*(INUCB+1)
        A=0.D0
        IF (IFAR.EQ.IFAC .AND. IFBR.EQ.IFBC) A=0.25D0
        B=0.D0
        IF (IFAR.EQ.IFAC .AND. IFBR.EQ.IFBC) THEN
          B=DBLE(IFAB*(IFAB+2)-IFAR*(IFAR+2)-IFBR*(IFBR+2))
          IF (MOD((INUCA+INUCB-IFAR-IFBR)/2,2).NE.0) B=-B
        ELSEIF (IFAR-IFAC.EQ.IFBR-IFBC) THEN
          B=DBLE(((IFAB+1)**2-(INUCA+INUCB+1)**2)*
     &           ((IFAB+1)**2-(INUCA+INUCB+3)**2))
          B=SQRT(B)
        ELSEIF (IFAR-IFAC.EQ.IFBC-IFBR) THEN
          B=DBLE(((IFAB+1)**2-(INUCA-INUCB+1)**2)*
     &           ((IFAB+1)**2-(INUCA-INUCB-1)**2))
          B=-SQRT(B)
        ELSEIF (IFAR-IFAC.EQ.0) THEN
          B=DBLE(((IFAR+INUCB+2)**2-(IFAB+1)**2)*
     &           ((IFAB+1)**2-(IFAR-INUCB)**2))
          B=SQRT(B)
          IF (MOD((IFAR+IFAC+IFAR+INUCA-INUCB+INUCB-1)/2,2).NE.0)
     &        B=-B
        ELSEIF (IFBR-IFBC.EQ.0) THEN
          B=DBLE(((IFBR+INUCA+2)**2-(IFAB+1)**2)*
     &           ((IFAB+1)**2-(IFBR-INUCA)**2))
          B=SQRT(B)
          IF (MOD((IFAR+IFAC+IFBR+INUCA-INUCB+INUCA-1)/2,2).NE.0)
     &        B=-B
        ENDIF
C
        B=B/DENOM
        IF (XS.EQ.0.D0) THEN
          CENTPC=A+B
        ELSEIF (XS.EQ.1.D0) THEN
          CENTPC=3.D0*A-B
        ELSE
          WRITE(6,*) '*** ERROR IN FUNCTION CENTPC, XS IS NOT 0 OR 1'
          STOP
        ENDIF
      ELSE
C  USE THE MORE GENERAL FORMULATION...
        PREFAC=SQRT(DBLE((IFAR+1)*(IFAC+1)*(IFBR+1)*(IFBC+1)))
        IS=INT(XS)*2
        IF (MOD((IFBR-IFBC+INUCA+INUCB-IFAB-IS)/2,2).NE.0)
     &     PREFAC=-PREFAC
        PREFAC=PREFAC*(XS*2.D0+1.D0)
        DO IX=ABS(ISA-ISB),ISA+ISB,2
          XFAC=DBLE(IX+1)*SIXJB(ISA,ISA,IX,ISB,ISB,IS)*
     &                    SIXJB(IFBR,IFBC,IX,IFAC,IFAR,IFAB)*
     &                    SIXJB(ISA,ISA,IX,IFAC,IFAR,INUCA)*
     &                    SIXJB(ISB,ISB,IX,IFBC,IFBR,INUCB)
          CENTPC=CENTPC+XFAC
        ENDDO
        CENTPC=CENTPC*PREFAC
      ENDIF
      RETURN
      END
C ======================================================== END OF CENTPC
      FUNCTION SPINSC(ISA,ISB,INUCA,INUCB,LR,LC,MTOT,
     &                IFAR,IFBR,IFABR,MFABR,
     &                IFAC,IFBC,IFABC,MFABC)
C
C  FUNCTION FOR A MATRIX ELEMENT OF A SPIN-SPIN TERM
C  ALL INPUT INTEGERS EXCEPT LR AND LC
C  ARE TWICE THE CORRESPONDING QUANTUM NUMBERS
C
C  THIS CODE EVALUATES THE ALGEBRAIC EXPRESSIONS DERIVED IN MY NOTES FOR THE
C  SPIN-SPIN PART OF THE HAMILTONIAN FOR THE ALKALI DIMER SYSTEM USING A
C  COUPLED BASIS SET.
C  CRLS 13-12-11
C
      IMPLICIT NONE
C
      INTEGER ISA,ISB,INUCA,INUCB,IFAR,IFAC,IFBR,IFBC,
     &        IFABR,IFABC,MFABR,MFABC,LR,LC,MTOT
      DOUBLE PRECISION PREFAC,THREEJ,SIXJB,SPINSC,THRJ2,NINEJ2
C
      PREFAC=DBLE((IFABC+1)*(2*LC+1)*ISA*(ISA+1)*(ISA+2))*
     1       DBLE((IFABR+1)*(2*LR+1)*ISB*(ISB+1)*(ISB+2))*
     2       DBLE((IFAC+1)*(IFBC+1)*(IFAR+1)*(IFBR+1))
      PREFAC=SQRT(PREFAC*30.D0)/(4.D0)
      IF (MOD((-MTOT+IFABR+ISA+ISB+INUCA+INUCB+IFAC+IFBC)/2,2).NE.0)
     &  PREFAC=-PREFAC
      IF (MOD((MFABR-MFABC)/2,2).NE.0) PREFAC=-PREFAC
      SPINSC=PREFAC*THREEJ(LR,2,LC)*
     &              SIXJB(ISA,IFAR,INUCA,IFAC,ISA,2)*
     &              SIXJB(ISB,IFBR,INUCB,IFBC,ISB,2)*
     &              NINEJ2(IFAR,IFAC,2,IFBR,IFBC,2,IFABR,IFABC,4)*
     &              THRJ2(IFABR,4,IFABC,-MFABR,MFABR-MFABC,MFABC)*
     &              THRJ2(LR*2,4,LC*2,MFABR-MTOT,MFABC-MFABR,MTOT-MFABC)
      RETURN
      END
C ======================================================== END OF SPINSC
C
      FUNCTION ZEECPL(ISA,ISB,INUCA,INUCB,
     &                IFAR,IFBR,IFABR,MFABR,
     &                IFAC,IFBC,IFABC,MFABC,
     &                GSA,GSB,GA,GB)
C
C  FUNCTION FOR A MATRIX ELEMENT OF A ZEEMAN TERM
C  ALL INPUT INTEGERS ARE TWICE THE CORRESPONDING QUANTUM NUMBERS
C
C  MOVED THE ORIGINAL PART OF THE HETERONUCLEAR ROUTINE FOR ZEEMAN EFFECT
C  TO A SUBROUTINE TO SIMPLIFY WRITING OUT EXCHANGES IN THE HOMONUCLEAR
C  CASE.
C  CLB 29-08-12
C
      IMPLICIT NONE
C
      INTEGER ISA,ISB,INUCA,INUCB,IFAR,IFAC,IFBR,IFBC,
     &        IFABR,IFABC,MFABR,MFABC
      DOUBLE PRECISION PREFAC,THREEJ,SIXJB,THRJ2,SEPART,SNPART,
     &                 GSA,GSB,GA,GB,ZEECPL,AFAC,BFAC,COMPRE
C
      ZEECPL=0D0
      IF (MFABR.EQ.MFABC) THEN
        COMPRE=SQRT(DBLE((IFABR+1)*(IFABC+1)))
        IF (MOD((IFABR-MFABR)/2,2).NE.0) COMPRE=-COMPRE
        PREFAC=COMPRE*THRJ2(IFABR,2,IFABC,-MFABR,0,MFABR)

C  MATRIX ELEMENT OF H_Z(A)
        IF (IFBR.EQ.IFBC) THEN
          AFAC=PREFAC*SIXJB(IFAR,IFABR,IFBR,IFABC,IFAC,2)*
     &         SQRT(DBLE((IFAR+1)*(IFAC+1)))
          IF (MOD((IFAR+ISA+INUCA)/2,2).NE.0) AFAC=-AFAC

          SEPART=GSA*AFAC*SIXJB(ISA,IFAR,INUCA,IFAC,ISA,2)
          SEPART=SEPART*SQRT(DBLE((ISA+1)*ISA*(ISA+2)))
          IF (MOD((IFAC+IFBC+IFABC)/2,2).NE.0) SEPART=-SEPART

          SNPART=GA*AFAC*SIXJB(INUCA,IFAR,ISA,IFAC,INUCA,2)
          SNPART=SNPART*SQRT(DBLE((INUCA+1)*INUCA*(INUCA+2)))
          IF (MOD((IFAR+IFBR+IFABC)/2,2).NE.0) SNPART=-SNPART

          ZEECPL=SEPART+SNPART
        ENDIF

C  MATRIX ELEMENT OF H_Z(B)
        IF (IFAR.EQ.IFAC) THEN
          BFAC=PREFAC*SIXJB(IFBR,IFABR,IFAR,IFABC,IFBC,2)*
     &         SQRT(DBLE((IFBR+1)*(IFBC+1)))
          IF (MOD((IFBC+ISB+INUCB)/2,2).NE.0) BFAC=-BFAC

          SEPART=GSB*BFAC*SIXJB(ISB,IFBR,INUCB,IFBC,ISB,2)
          SEPART=SEPART*SQRT(DBLE((ISB+1)*ISB*(ISB+2)))
          IF (MOD((IFAC+IFBC+IFABR)/2,2).NE.0) SEPART=-SEPART

          SNPART=GB*BFAC*SIXJB(INUCB,IFBR,ISB,IFBC,INUCB,2)
          SNPART=SNPART*SQRT(DBLE((INUCB+1)*INUCB*(INUCB+2)))
          IF (MOD((IFAR+IFBR+IFABR)/2,2).NE.0) SNPART=-SNPART

          ZEECPL=ZEECPL+SEPART+SNPART
        ENDIF
      ENDIF
      RETURN
      END
C ======================================================== END OF ZEECPL
      FUNCTION GAUNT(LAMBDA,MU,J1,M1,J2,M2)
C
C  FUNCTION FOR A MATRIX ELEMENT OF AN ASSOCIATED LEGENDRE POLYNOMIAL
C  P(LAMBDA,MU) BETWEEN TWO SPHERICAL HARMONICS Y(J1,M1)* AND Y(J2,M2)
C  (SOMETIMES KNOWN AS A GAUNT COEFFICIENT)
C  ARGUMENTS ARE UNDOUBLED QUANTUM NUMBERS
C
C  JMH 26 JUNE 2022
C
      IMPLICIT NONE
      INTEGER LAMBDA,MU,J1,J2,M1,M2
      DOUBLE PRECISION GAUNT,PARSGN,THREEJ,THRJ
C
      GAUNT=PARSGN(M1)*SQRT(DBLE((2*J1+1)*(2*J2+1)))
     1     *THREEJ(J1,LAMBDA,J2)
     2     *THRJ(DBLE(J1),DBLE(LAMBDA),DBLE(J2),
     3          -DBLE(M1),DBLE(MU),    DBLE(M2))
      RETURN
      END
C ========================================================= END OF GAUNT
      FUNCTION SIXJB(J1DBL,J2DBL,J3DBL,J4DBL,J5DBL,J6DBL)
C
C  HALVE THE INTEGER ARGUMENTS AND SWAP THEM AROUND FOR DSIXJ
C
      IMPLICIT NONE
      DOUBLE PRECISION SIXJB,DSIXJ
      INTEGER J1DBL,J2DBL,J3DBL,J4DBL,J5DBL,J6DBL
C
      SIXJB=DSIXJ(0.5D0*DBLE(J1DBL),0.5D0*DBLE(J2DBL),0.5D0*DBLE(J5DBL),
     &            0.5D0*DBLE(J4DBL),0.5D0*DBLE(J3DBL),0.5D0*DBLE(J6DBL))
      RETURN
      END
C ======================================================== END OF SIXJB
      DOUBLE PRECISION FUNCTION THRJ2(J1DBL,J2DBL,J3DBL,
     &                                M1DBL,M2DBL,M3DBL)
C  INTEGER ARGUMENTS ARE DOUBLE THE ACTUAL VALUES
      IMPLICIT NONE
      DOUBLE PRECISION THRJ
      INTEGER J1DBL,J2DBL,J3DBL,M1DBL,M2DBL,M3DBL

      THRJ2=THRJ(DBLE(J1DBL)/2D0,DBLE(J2DBL)/2D0,DBLE(J3DBL)/2D0,
     &           DBLE(M1DBL)/2D0,DBLE(M2DBL)/2D0,DBLE(M3DBL)/2D0)

      RETURN
      END
C ======================================================== END OF THRJ2
      DOUBLE PRECISION FUNCTION NINEJ2(J11DBL,J12DBL,J13DBL,
     &                                 J21DBL,J22DBL,J23DBL,
     &                                 J31DBL,J32DBL,J33DBL)
C  INTEGER ARGUMENTS ARE DOUBLE THE ACTUAL VALUES
      IMPLICIT NONE

      DOUBLE PRECISION DNINEJ
      INTEGER J11DBL,J12DBL,J13DBL,J21DBL,J22DBL,J23DBL,
     &        J31DBL,J32DBL,J33DBL

      NINEJ2=DNINEJ(DBLE(J11DBL)/2D0,DBLE(J12DBL)/2D0,DBLE(J13DBL)/2D0,
     &              DBLE(J21DBL)/2D0,DBLE(J22DBL)/2D0,DBLE(J23DBL)/2D0,
     &              DBLE(J31DBL)/2D0,DBLE(J32DBL)/2D0,DBLE(J33DBL)/2D0)
      RETURN
      END
